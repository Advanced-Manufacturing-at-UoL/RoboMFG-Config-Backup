#############################################################################################################
### Dropoff
### Dropoff gcode macros go here
#############################################################################################################

[gcode_macro _SUB_TOOL_DROPOFF_START]
description: Internal subroutine
  T: Tool to pickup
gcode:
  {% set myself = printer['tool '~params.T] %}

  M568 P{myself.name} A1

  SAVE_ACCELERATION                                            # Save current acceleration value.
  SET_GCODE_OFFSET X=0 Y=0                                     # Set XY offset to 0 so we park the tool right.
  # SAVE_GCODE_STATE NAME=TOOL_DROPOFF_STATE
  M204 S8000

  {% set zone_speed = printer["gcode_macro Tool_Changer"].zone_speed|float * 60 %}
  {% set park_in_speed = printer["gcode_macro Tool_Changer"].park_in_speed|float * 60 %}
  {% set safe_zone_y = printer["gcode_macro Tool_Changer"].safe_zone_y|float %}
  {% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
  {% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}

  {% if myself.name|int != printer.toollock.tool_current|int %}
    { action_raise_error("SUB_TOOL_DROPOFF_START: Wrong tool. Asked to dropoff T" ~ myself.name ~ " while current is T" ~ printer.toollock.tool_current ~ ".") }
  {% endif %}

  #############  Retract the filament as per e3d Revo documentation  ##############
  {% if myself.extruder|default("none")|lower !="none" %}           # If the tool has an extruder:
    M568 P{myself.name} A1                                          # Put tool heater in standby
    {% if printer[myself.extruder].can_extrude|default("false")|lower == 'true' %}    # If can extrude:
      {action_respond_info("Un-priming Nozzle")}
      M83                                                           # Relative extrusion
      G91
      G92 E0
      G1 E-2 F2700                                                  # retract a bit
      G1 Z0.2 E-2 F2400                                             # retract and raise Z
      G1 E-18 F800                                                  # retract filament from meltzone
      G92 E0
    {% endif %}
  {% endif %}

  # SAVE_GCODE_STATE NAME=TOOL_PREPREP_STATE
  G90

  ##############  Move in to zone  ##############
  {% if printer.toolhead.position.z|float < z_hop %}
    G0 Z{z_hop} F{z_hop_speed}
  {% endif %}
  {% if printer.toolhead.position.y|float > safe_zone_y %}
    G0 Y{safe_zone_y} F{zone_speed}
  {% else %}
    G0 X{myself.zone[0]} Y{safe_zone_y} F{zone_speed}
  {% endif %}

  ##############  Move in to parking spot  ##############
  G0 Y{myself.park[1]|int - 35} F{zone_speed}
  G0 Y{myself.park[1]} F{park_in_speed }


[gcode_macro _SUB_TOOL_DROPOFF_END]
description: Internal subroutine
  T: Tool to pickup
gcode:
  {% set myself = printer['tool '~params.T]%}
  {% set zone_speed = printer["gcode_macro Tool_Changer"].zone_speed|float * 60 %}
  {% set park_out_speed = printer["gcode_macro Tool_Changer"].park_out_speed|float * 60 %}
  {% set safe_zone_y = printer["gcode_macro Tool_Changer"].safe_zone_y|float %}
  {% set safe_zone_y_unloaded = printer["gcode_macro Tool_Changer"].safe_zone_y_unloaded|float %}

  TOOL_UNLOCK
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
  M400
  G90
  M83

  G0 Y{myself.park[1]|int - 15} F{park_out_speed}
  # G0 Y{myself.zone[1]} F{zone_speed}
  G0 Y{safe_zone_y_unloaded} F{zone_speed}
  SET_GCODE_OFFSET Z=0 MOVE=0
  G1 F{zone_speed}

  # RESTORE_GCODE_STATE NAME=TOOL_DROPOFF_STATE MOVE=0
  RESTORE_ACCELERATION                # Restore saved acceleration value.


