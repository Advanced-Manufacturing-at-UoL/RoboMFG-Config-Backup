[ratos_homing]
axes: xyz
z_hop: 15
z_hop_speed: 15
gcode:
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_x is not number %}
		{ action_emergency_stop("expected safe_home_x to be a float but found {} ".format(safe_home_x)) }
	{% endif %}
	{% if safe_home_y is not number %}
		{ action_emergency_stop("expected safe_home_y to be a float but found {} ".format(safe_home_y)) }
	{% endif %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}
    {% set tool_detected = printer["filament_switch_sensor tool_detect"].filament_detected %}
    {% set current_tool = printer.toollock.tool_current|int %}

	# Make stowable probe assertion failures cause an emergency stop
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True

	M400                        # Wait for moves to finish
	G90                         # Absolute positioning

	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
        HOME_X
	{% endif %}

	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
        HOME_Y
	{% endif %}

	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
        {% if current_tool >= 0 %}
            {action_respond_info("KTCC reports tool loaded, ensuring XY are homed before tool dropoff and homing Z")}
            {% if x_homed is False or y_homed is False %}
                HOME_X
            {% endif %}
            SET_KINEMATIC_POSITION Z=0
            {action_respond_info("XY homed, dropping off tool")}
            TOOL_DROPOFF
            SET_GCODE_OFFSET X=0 Y=0
            HOME_Z

        {% elif current_tool == -2 %}
            {action_respond_info("KTCC reports unknown tool loaded, cannot home. Please manually reset toolchanger")}

        {% else %}
        {% if printer["filament_switch_sensor tool_detect"].filament_detected %}
            {action_respond_info("KTCC reports no tool loaded, however tool detect indicates one is present. Please manually reset toolchanger")}
        
        {% else %}
            SET_KINEMATIC_POSITION Z=0
            {% if x_homed is false or y_homed is false %}
                HOME_X
            {% endif %}
            HOME_Z
        {% endif %}
    {% endif %}

	# Reset stowable probe stop on error state
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

[GCODE_MACRO HOME_X]
gcode:
    {% if y_homed is false %}
        HOME_Y
    {% endif %}
    G28 X
    {% set x_homed = True %}
    G0 X{safe_home_x} F{speed}

[GCODE_MACRO HOME_Y]
gcode:
    G28 Y
    {% set y_homed = True %} 
    G0 Y{safe_home_y} F{speed}

[GCODE_MACRO HOME_Z]
gcode:
    {% if x_homed == False or y_homed == False or tool_detected = True or current_tool >= 0 %}
        M118 X and Y must be homed before homing Z
        { action_emergency_stop("X and Y must be homed and the toolchanger empty before homing Z") }
    {% else %}
    G0 X{safe_home_x} Y{safe_home_y} F{speed}
    G28 Z
    G0 Z{z_hop} F{z_hop_speed}