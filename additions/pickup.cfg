#############################################################################################################
### Pickup
### Pickup gcode macros go here
#############################################################################################################
[gcode_macro _SUB_TOOL_PICKUP_START]
description: Internal subroutine
  T: Tool to pickup
gcode:
  {% set myself = printer['tool '~params.T]%}
  {% set toollock = printer['toollock']%}
  {% set current_tool = printer.toollock.tool_current|int %}
  {% set zone_speed = printer["gcode_macro Tool_Changer"].zone_speed|float * 60 %}
  {% set park_in_speed = printer["gcode_macro Tool_Changer"].park_in_speed|float * 60 %}
  {% set safe_zone_y = printer["gcode_macro Tool_Changer"].safe_zone_y|float %}
  {% set safe_zone_y_unloaded = printer["gcode_macro Tool_Changer"].safe_zone_y_unloaded|float %}
  {% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
  {% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
  {% set sfx = printer["gcode_macro IS_T{}".format(params.T)].shaper_freq_x|string %}
  {% set sfy = printer["gcode_macro IS_T{}".format(params.T)].shaper_freq_y|string %}
  {% set stx = printer["gcode_macro IS_T{}".format(params.T)].shaper_type_x|string %}
  {% set sty = printer["gcode_macro IS_T{}".format(params.T)].shaper_type_y|string %}

  # SAVE_CURRENT_POSITION
  M568 P{myself.name} A2

  {action_respond_info("SAVE_ACCELERATION")}
  SAVE_ACCELERATION                                                    
  M204 S8000

  # SAVE_GCODE_STATE NAME=TOOL_PICKUP_STATE
  G90

  ##############  Move in to zone  ##############
  {% if printer.toolhead.position.z|int < z_hop %}
    G1 Z{z_hop} F{z_hop_speed}
  {% endif %}
  {% if current_tool < 0 %}
    {% if printer.toolhead.position.y|int > safe_zone_y_unloaded %}
      G0 Y{safe_zone_y_unloaded} F{zone_speed}
      G0 X{myself.zone[0]} Y{safe_zone_y_unloaded} F{zone_speed}
    {% endif %}
  {% else %}
    {% if printer.toolhead.position.y|int > safe_zone_y %}
      G0 Y{safe_zone_y} F{zone_speed}
      G0 X{myself.zone[0]} Y{myself.zone[1]} F{zone_speed}
    {% endif %}
  {% endif %}

  ##############  Move in to parking spot  ##############
  G0 X{myself.park[0]} Y{myself.park[1]|float - 35} F{zone_speed}
  G0 X{myself.park[0]} Y{myself.park[1]} F{park_in_speed}

  ##############  Lock Tool  ##############
  M400
  TOOL_LOCK
  ASSERT_TOOL_DETECTED
  SET_INPUT_SHAPER SHAPER_FREQ_X={sfx} SHAPER_FREQ_Y={sfy} SHAPER_TYPE_X={stx} SHAPER_TYPE_Y={sty}
  SET_GCODE_OFFSET Z={toollock.global_offset[2]|float + myself.offset[2]|float} MOVE=1                   # Set and move the Z offset. Avoid crashing into bed when moving out later.

  ##############  Wait for heater  ##############
  {% if myself.extruder|default("none")|lower !="none" %}       # If the tool has an extruder:
    M116 P{myself.name}                                         # Wait for tool to reach target temperature.
  {% endif %}
  
  ############  Prime the filament, asume it was retracted as per e3d Revo documentation  ##############
  # SAVE_GCODE_STATE NAME=TOOL_PREPRIME_STATE
  {% if myself.extruder|default("none")|lower !="none" %}       # If the tool has an extruder:
    {action_respond_info("Has Extruder")}
    # If can extrude and global purge is active:
    {% if printer.toollock.purge_on_toolchange %}
      {action_respond_info("Priming Nozzle")}
      M83                                                           # Relative extrusion
      G92 E0
      G1 E{myself.meltzonelength} F2700                             # DeRetract filament from meltzone
      # G1 E2 F800                                                    # DeRetract filament from meltzone
      G92 E0
    {% endif %}
  {% endif %}

  # RESTORE_GCODE_STATE NAME=TOOL_PREPRIME_STATE                      # Restore state after priming nozzle

[gcode_macro _SUB_TOOL_PICKUP_END]
description: Internal subroutine
  T: Tool to pickup
gcode:
  {action_respond_info("SUB_TOOL_PICKUP_END START")}
  {% set myself = printer['tool '~params.T]%}
  {% set toollock = printer['toollock']%}
  {% set zone_speed = printer["gcode_macro Tool_Changer"].zone_speed|float * 60 %}
  {% set park_out_speed = printer["gcode_macro Tool_Changer"].park_out_speed|float * 60 %}
  {% set safe_zone_y = printer["gcode_macro Tool_Changer"].safe_zone_y|float %}

  {action_respond_info("Moving to Y={safe_zone_y}")}

  ##############  Move out to zone  ##############
  G0 Y{myself.park[1]|int - 35} F{park_out_speed}  
  G0 Y{myself.zone[1]} F{zone_speed}
  G0 Y{safe_zone_y} F{zone_speed}
  {action_respond_info("SUB_TOOL_PICKUP_START END")}
 
  ##############  Finnish up  ##############
  M400
  # RESTORE_GCODE_STATE NAME=TOOL_PICKUP_STATE MOVE=0
  G90
  M83
  SET_GCODE_OFFSET X={toollock.global_offset[0]|float + myself.offset[0]|float} Y={toollock.global_offset[1]|float + myself.offset[1]|float} Z={toollock.global_offset[2]|float + myself.offset[2]|float} MOVE=0
  
  G1 F{zone_speed}
  RESTORE_ACCELERATION       
  {action_respond_info("SUB_TOOL_PICKUP_END END")}

  