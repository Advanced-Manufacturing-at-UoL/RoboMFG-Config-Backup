###
### PICKUP
###

[gcode_macro TOOL_SELECT]
description: Select a tool
gcode:
  {% if params.T is defined %}
    T{params.T}
  {% endif %}


[gcode_macro SUB_TOOL_PICKUP_START]
description: Internal subroutine
  T: Tool to pickup
gcode:
  {%set myself = printer['tool '~params.T]%}
  {%set toollock = printer['toollock']%}

  {% set zone_speed = printer["gcode_macro Tool_Changer"].zone_speed|float %}
  {% set park_in_speed = printer["gcode_macro Tool_Changer"].park_in_speed|float %}
  {% set park_out_speed = printer["gcode_macro Tool_Changer"].park_out_speed|float %}
  {% set safe_zone_y = printer["gcode_macro Tool_Changer"].safe_zone_y|float %}

  M568 P{myself.name} A2

  {action_respond_info("SAVE_ACCELERATION")}
  SAVE_ACCELERATION                                                    
  M204 S8000

  SAVE_GCODE_STATE NAME=TOOL_PICKUP_STATE
  G90

  ##############  Move in to zone  ##############
  {% if printer.toolhead.position.y|int > safe_zone_y %}
    G0 Y{safe_zone_y} F{zone_speed}
  {% endif %}
  G0 X{myself.zone[0]} Y{myself.zone[1]} F{zone_speed}

  ##############  Move in to parking spot  ##############
  G0 X{myself.park[0]} Y{myself.park[1]|float - 20} F{park_in_speed}
  G0 X{myself.park[0]} Y{myself.park[1]} F{park_in_speed / 2}

  ##############  Lock Tool  ##############
  M400
  TOOL_LOCK
  SET_GCODE_OFFSET Z={toollock.global_offset[2]|float + myself.offset[2]|float} MOVE=1                   # Set and move the Z offset. Avoid crashing into bed when moving out later.

  ##############  Wait for heater  ##############
  {% if myself.extruder|default("none")|lower !="none" %}       # If the tool has an extruder:
    M116 P{myself.name}                                         # Wait for tool to reach target temperature.
  {% endif %}

  SAVE_GCODE_STATE NAME=TOOL_PICKUP2                            # Save state for priming nozzle
  
  ##############  Prime the filament, asume it was retracted as per e3d Revo documentation  ##############
  {% if myself.extruder|default("none")|lower !="none" %}       # If the tool has an extruder:
    # If can extrude and global purge is active:
    {% if printer[myself.extruder].can_extrude|default("false")|lower == 'true' and printer.toollock.purge_on_toolchange %}
      M83                                                           # Relative extrusion
      G1 E{myself.meltzonelength|int - 2} F1300                     # DeRetract filament from meltzone
      G1 E1 F400                                                    # DeRetract filament from meltzone
    {% endif %}
  {% endif %}

  RESTORE_GCODE_STATE NAME=TOOL_PICKUP2                          # Restore state after priming nozzle

  ##############  Move out to zone  ##############
  G0 Y{myself.zone[1]} F{park_out_speed}
  {action_respond_info("SUB_TOOL_PICKUP_START END")}


[gcode_macro SUB_TOOL_PICKUP_END]
description: Internal subroutine
  T: Tool to pickup
gcode:
  {action_respond_info("SUB_TOOL_PICKUP_END START")}
  {%set myself = printer['tool '~params.T]%}
  {%set toollock = printer['toollock']%}

  {% set zone_speed = printer["gcode_macro Tool_Changer"].zone_speed|float %}
  {% set safe_zone_y = printer["gcode_macro Tool_Changer"].safe_zone_y|float %}

  {action_respond_info("Moving to Y={safe_zone_y}")}

  ##############  Move out to Safe position  ##############
  G0 Y{safe_zone_y} F{zone_speed}

  ##############  Check Tool Lock  ##############
  #TOOL_LOCK_CHECK
  ASSERT_TOOL_DETECTED
 
  ##############  Finnish up  ##############
  M400
  RESTORE_GCODE_STATE NAME=TOOL_PICKUP_STATE MOVE=0

  {action_respond_info("Applying offsets: X={toollock.global_offset[0]|float + myself.offset[0]|float} Y={toollock.global_offset[1]|float + myself.offset[1]|float} Z={toollock.global_offset[2]|float + myself.offset[2]|float}")}

  SET_GCODE_OFFSET X={toollock.global_offset[0]|float + myself.offset[0]|float} Y={toollock.global_offset[1]|float + myself.offset[1]|float} Z={toollock.global_offset[2]|float + myself.offset[2]|float} MOVE=0
  
  #RESTORE_POSITION
  #G1 F30000
  RESTORE_ACCELERATION       
  {action_respond_info("SUB_TOOL_PICKUP_END END")}

  